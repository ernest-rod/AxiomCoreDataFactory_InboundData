{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AxiomCoreDF2GetInboundDataFiles"
		},
		"AxiomCore_VM_Seagate_SFtpServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AxiomCore_VM_Seagate_SFtpServer'"
		},
		"AzureBlobStorage_Inbound_Data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_Inbound_Data'"
		},
		"AzureSqlDatabase_AdventureWorksDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_AdventureWorksDW'"
		},
		"AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "seagate.eastus.cloudapp.azure.com"
		},
		"AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ernest"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AxiomCore_VM_Seagate_SFtpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Link to Secured FTP server where data files from customers will be stored temporarily. ",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AxiomCore_VM_Seagate_SFtpServer_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_Inbound_Data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_Inbound_Data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_AdventureWorksDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL Database link to AdventureWorks db for Data Warehouse.",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_AdventureWorksDW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gqw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "New Arrivals",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimProduct in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "DealerPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "LargePhoto",
						"type": "varbinary"
					},
					{
						"name": "EnglishDescription",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDescription",
						"type": "nvarchar"
					},
					{
						"name": "ChineseDescription",
						"type": "nvarchar"
					},
					{
						"name": "ArabicDescription",
						"type": "nvarchar"
					},
					{
						"name": "HebrewDescription",
						"type": "nvarchar"
					},
					{
						"name": "ThaiDescription",
						"type": "nvarchar"
					},
					{
						"name": "GermanDescription",
						"type": "nvarchar"
					},
					{
						"name": "JapaneseDescription",
						"type": "nvarchar"
					},
					{
						"name": "TurkishDescription",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_TextDataFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "All data files from the FTP.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gqw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AxiomCore_VM_Seagate_SFtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "readme.txt",
						"folderPath": "test_area"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AxiomCore_VM_Seagate_SFtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimProduct_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Product Dimension Data File.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimProduct.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "ProductAlternateKey",
						"type": "String"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "String"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "SpanishProductName",
						"type": "String"
					},
					{
						"name": "FrenchProductName",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "SafetyStockLevel",
						"type": "String"
					},
					{
						"name": "ReorderPoint",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "SizeRange",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "DaysToManufacture",
						"type": "String"
					},
					{
						"name": "ProductLine",
						"type": "String"
					},
					{
						"name": "DealerPrice",
						"type": "String"
					},
					{
						"name": "Class",
						"type": "String"
					},
					{
						"name": "Style",
						"type": "String"
					},
					{
						"name": "ModelName",
						"type": "String"
					},
					{
						"name": "LargePhoto",
						"type": "String"
					},
					{
						"name": "EnglishDescription",
						"type": "String"
					},
					{
						"name": "FrenchDescription",
						"type": "String"
					},
					{
						"name": "ChineseDescription",
						"type": "String"
					},
					{
						"name": "ArabicDescription",
						"type": "String"
					},
					{
						"name": "HebrewDescription",
						"type": "String"
					},
					{
						"name": "ThaiDescription",
						"type": "String"
					},
					{
						"name": "GermanDescription",
						"type": "String"
					},
					{
						"name": "JapaneseDescription",
						"type": "String"
					},
					{
						"name": "TurkishDescription",
						"type": "String"
					},
					{
						"name": "StartDate",
						"type": "String"
					},
					{
						"name": "EndDate",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_TextDataFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "All text files in test area in FTP server.",
				"linkedServiceName": {
					"referenceName": "AxiomCore_VM_Seagate_SFtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "test_area"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AxiomCore_VM_Seagate_SFtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_gqw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_gqw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "test_area/readme.txt"
							},
							{
								"name": "Destination",
								"value": "inbounddatafiles/New Arrivals/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"useBinaryTransfer": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": "0"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage_Inbound_Data",
									"type": "LinkedServiceReference"
								},
								"path": "inbounddatafiles/Logs"
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gqw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_gqw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Axiom Pipelines/Test Area"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_gqw')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_gqw')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveAllFilesFromFTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get all files from the FTP server into the inbound storage.",
				"activities": [
					{
						"name": "Get_All_Text_Files",
						"description": "Get all text files from FTP server.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFolderPath": "test_area",
									"wildcardFileName": "*.csv",
									"useBinaryTransfer": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_TextDataFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_TextDataFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Axiom Pipelines/Test Area"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_TextDataFiles')]",
				"[concat(variables('factoryId'), '/datasets/Destination_TextDataFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFT_LoadDataIntoDB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load file data into the DB.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_DimProduct_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimProductData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimProduct",
								"type": "DatasetReference"
							},
							"name": "SNKDimProductData"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tProductKey as short,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as short,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as double,\n\t\tFinishedGoodsFlag as boolean,\n\t\tColor as string,\n\t\tSafetyStockLevel as short,\n\t\tReorderPoint as short,\n\t\tListPrice as double,\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as double,\n\t\tDaysToManufacture as short,\n\t\tProductLine as string,\n\t\tDealerPrice as double,\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as string,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as string,\n\t\tEndDate as string,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimProductData\nSRCDimProductData sink(input(\n\t\tProductKey as integer,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as integer,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as decimal(19,4),\n\t\tFinishedGoodsFlag as boolean,\n\t\tColor as string,\n\t\tSafetyStockLevel as short,\n\t\tReorderPoint as short,\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as double,\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tDealerPrice as decimal(19,4),\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as binary,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductAlternateKey,\n\t\tWeightUnitMeasureCode,\n\t\tSizeUnitMeasureCode,\n\t\tEnglishProductName,\n\t\tSpanishProductName,\n\t\tFrenchProductName,\n\t\tFinishedGoodsFlag,\n\t\tColor,\n\t\tSize,\n\t\tSizeRange,\n\t\tProductLine,\n\t\tClass,\n\t\tStyle,\n\t\tModelName,\n\t\tEnglishDescription,\n\t\tFrenchDescription,\n\t\tChineseDescription,\n\t\tArabicDescription,\n\t\tHebrewDescription,\n\t\tThaiDescription,\n\t\tGermanDescription,\n\t\tJapaneseDescription,\n\t\tTurkishDescription,\n\t\tStatus,\n\t\tProductKey,\n\t\tStartDate,\n\t\tEndDate,\n\t\tLargePhoto,\n\t\tDealerPrice,\n\t\tDaysToManufacture,\n\t\tWeight,\n\t\tListPrice,\n\t\tReorderPoint,\n\t\tSafetyStockLevel,\n\t\tStandardCost,\n\t\tProductSubcategoryKey\n\t),\n\tskipDuplicateMapInputs: true) ~> SNKDimProductData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_DimProduct_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimProduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadAWDataFromCSVToAWDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get data from AW csv files and load them into AW database.",
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DFT_LoadDataIntoDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCDimProductData": {},
									"SNKDimProductData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Axiom Pipelines/Test Area"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DFT_LoadDataIntoDB')]"
			]
		}
	]
}