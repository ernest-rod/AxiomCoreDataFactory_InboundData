{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AxiomCoreDF2GetInboundDataFiles"
		},
		"AxiomCore_VM_Seagate_SFtpServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AxiomCore_VM_Seagate_SFtpServer'"
		},
		"AzureBlobStorage_Inbound_Data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_Inbound_Data'"
		},
		"AzureSqlDatabase_AdventureWorksDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_AdventureWorksDW'"
		},
		"AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "seagate.eastus.cloudapp.azure.com"
		},
		"AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ernest"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_gqw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_gqw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "test_area/readme.txt"
							},
							{
								"name": "Destination",
								"value": "inbounddatafiles/New Arrivals/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"useBinaryTransfer": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": "0"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage_Inbound_Data",
									"type": "LinkedServiceReference"
								},
								"path": "inbounddatafiles/Logs"
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gqw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_gqw",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Axiom Pipelines/Test Area"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_gqw')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_gqw')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadAWDataFromCSVToAWDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get data from AW csv files and load them into AW database.",
				"activities": [
					{
						"name": "DFT_LoadDataIntoDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DFT_LoadDataIntoDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCDimProductData": {},
									"SRCDimCustomerData": {},
									"SRCFactInternetSalesData": {},
									"SRCDimSalesTerritoryData": {},
									"SRCDimProductCategoryData": {},
									"SRCDimDateData": {},
									"SRCDimProductSubCategoryData": {},
									"SNKDimProductData": {},
									"SNKDimCustomerData": {},
									"SNKFactInternetSalesData": {},
									"SNKDimSalesTerritoryData": {},
									"SNKDimProductCategoryData": {},
									"SNKDimDateData": {},
									"SNKDimProductSubCategoryData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Axiom Pipelines/Test Area"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DFT_LoadDataIntoDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveAllFilesFromFTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get all files from the FTP server into the inbound storage.",
				"activities": [
					{
						"name": "Get_All_Text_Files",
						"description": "Get all text files from FTP server.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFolderPath": "test_area",
									"wildcardFileName": "*.csv",
									"useBinaryTransfer": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1
						},
						"inputs": [
							{
								"referenceName": "Source_TextDataFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_TextDataFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"Start": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Axiom Pipelines/Test Area"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_TextDataFiles')]",
				"[concat(variables('factoryId'), '/datasets/Destination_TextDataFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gqw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "New Arrivals",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimCustomer in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "EnglishEducation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishEducation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchEducation",
						"type": "nvarchar"
					},
					{
						"name": "EnglishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchOccupation",
						"type": "nvarchar"
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar"
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "DateFirstPurchase",
						"type": "date"
					},
					{
						"name": "CommuteDistance",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimDate in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullDateAlternateKey",
						"type": "date"
					},
					{
						"name": "DayNumberOfWeek",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "EnglishDayNameOfWeek",
						"type": "nvarchar"
					},
					{
						"name": "SpanishDayNameOfWeek",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDayNameOfWeek",
						"type": "nvarchar"
					},
					{
						"name": "DayNumberOfMonth",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "DayNumberOfYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "WeekNumberOfYear",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "EnglishMonthName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishMonthName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchMonthName",
						"type": "nvarchar"
					},
					{
						"name": "MonthNumberOfYear",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CalendarQuarter",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CalendarSemester",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "FiscalQuarter",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "FiscalYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FiscalSemester",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimDate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimProduct in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "DealerPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "LargePhoto",
						"type": "varbinary"
					},
					{
						"name": "EnglishDescription",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDescription",
						"type": "nvarchar"
					},
					{
						"name": "ChineseDescription",
						"type": "nvarchar"
					},
					{
						"name": "ArabicDescription",
						"type": "nvarchar"
					},
					{
						"name": "HebrewDescription",
						"type": "nvarchar"
					},
					{
						"name": "ThaiDescription",
						"type": "nvarchar"
					},
					{
						"name": "GermanDescription",
						"type": "nvarchar"
					},
					{
						"name": "JapaneseDescription",
						"type": "nvarchar"
					},
					{
						"name": "TurkishDescription",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimProductCategory in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCategoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishProductCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductCategoryName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimProductSubCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimProductSubCategory in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductSubcategoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "ProductCategoryKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProductSubcategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_DimSalesTerritoy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table DimSalesTerritory in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryRegion",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryCountry",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryGroup",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryImage",
						"type": "varbinary"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimSalesTerritory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_AzureSqlTable_FactInternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Table FactInternetSales in AdventureWorks DB",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_TextDataFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "All data files from the FTP.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gqw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AxiomCore_VM_Seagate_SFtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "readme.txt",
						"folderPath": "test_area"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AxiomCore_VM_Seagate_SFtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimCustomer_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Customer Dimension Data File.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimCustomer.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerKey",
						"type": "String"
					},
					{
						"name": "GeographyKey",
						"type": "String"
					},
					{
						"name": "CustomerAlternateKey",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "BirthDate",
						"type": "String"
					},
					{
						"name": "MaritalStatus",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					},
					{
						"name": "SpanishEducation",
						"type": "String"
					},
					{
						"name": "FrenchEducation",
						"type": "String"
					},
					{
						"name": "EnglishOccupation",
						"type": "String"
					},
					{
						"name": "SpanishOccupation",
						"type": "String"
					},
					{
						"name": "FrenchOccupation",
						"type": "String"
					},
					{
						"name": "HouseOwnerFlag",
						"type": "String"
					},
					{
						"name": "NumberCarsOwned",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "DateFirstPurchase",
						"type": "String"
					},
					{
						"name": "CommuteDistance",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimDate_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dimension Date Data File",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimDate.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateKey",
						"type": "String"
					},
					{
						"name": "FullDateAlternateKey",
						"type": "String"
					},
					{
						"name": "DayNumberOfWeek",
						"type": "String"
					},
					{
						"name": "EnglishDayNameOfWeek",
						"type": "String"
					},
					{
						"name": "SpanishDayNameOfWeek",
						"type": "String"
					},
					{
						"name": "FrenchDayNameOfWeek",
						"type": "String"
					},
					{
						"name": "DayNumberOfMonth",
						"type": "String"
					},
					{
						"name": "DayNumberOfYear",
						"type": "String"
					},
					{
						"name": "WeekNumberOfYear",
						"type": "String"
					},
					{
						"name": "EnglishMonthName",
						"type": "String"
					},
					{
						"name": "SpanishMonthName",
						"type": "String"
					},
					{
						"name": "FrenchMonthName",
						"type": "String"
					},
					{
						"name": "MonthNumberOfYear",
						"type": "String"
					},
					{
						"name": "CalendarQuarter",
						"type": "String"
					},
					{
						"name": "CalendarYear",
						"type": "String"
					},
					{
						"name": "CalendarSemester",
						"type": "String"
					},
					{
						"name": "FiscalQuarter",
						"type": "String"
					},
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "FiscalSemester",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimProductCategory_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dimension Product Category Data File",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimProductCategory.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductCategoryKey",
						"type": "String"
					},
					{
						"name": "ProductCategoryAlternateKey",
						"type": "String"
					},
					{
						"name": "EnglishProductCategoryName",
						"type": "String"
					},
					{
						"name": "SpanishProductCategoryName",
						"type": "String"
					},
					{
						"name": "FrenchProductCategoryName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimProductSubCategory_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Product Sub Category Dimension Data File.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimProductSubCategory.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductSubcategoryKey",
						"type": "String"
					},
					{
						"name": "ProductSubcategoryAlternateKey",
						"type": "String"
					},
					{
						"name": "EnglishProductSubcategoryName",
						"type": "String"
					},
					{
						"name": "SpanishProductSubcategoryName",
						"type": "String"
					},
					{
						"name": "FrenchProductSubcategoryName",
						"type": "String"
					},
					{
						"name": "ProductCategoryKey",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimProduct_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Product Dimension Data File.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimProduct.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "ProductAlternateKey",
						"type": "String"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "String"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "SpanishProductName",
						"type": "String"
					},
					{
						"name": "FrenchProductName",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "SafetyStockLevel",
						"type": "String"
					},
					{
						"name": "ReorderPoint",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "SizeRange",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "DaysToManufacture",
						"type": "String"
					},
					{
						"name": "ProductLine",
						"type": "String"
					},
					{
						"name": "DealerPrice",
						"type": "String"
					},
					{
						"name": "Class",
						"type": "String"
					},
					{
						"name": "Style",
						"type": "String"
					},
					{
						"name": "ModelName",
						"type": "String"
					},
					{
						"name": "LargePhoto",
						"type": "String"
					},
					{
						"name": "EnglishDescription",
						"type": "String"
					},
					{
						"name": "FrenchDescription",
						"type": "String"
					},
					{
						"name": "ChineseDescription",
						"type": "String"
					},
					{
						"name": "ArabicDescription",
						"type": "String"
					},
					{
						"name": "HebrewDescription",
						"type": "String"
					},
					{
						"name": "ThaiDescription",
						"type": "String"
					},
					{
						"name": "GermanDescription",
						"type": "String"
					},
					{
						"name": "JapaneseDescription",
						"type": "String"
					},
					{
						"name": "TurkishDescription",
						"type": "String"
					},
					{
						"name": "StartDate",
						"type": "String"
					},
					{
						"name": "EndDate",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DimSalesTerritory_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dim Sales Territory Data File.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DimSalesTerritory.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesTerritoryKey",
						"type": "String"
					},
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "String"
					},
					{
						"name": "SalesTerritoryRegion",
						"type": "String"
					},
					{
						"name": "SalesTerritoryCountry",
						"type": "String"
					},
					{
						"name": "SalesTerritoryGroup",
						"type": "String"
					},
					{
						"name": "SalesTerritoryImage",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_FactInternetSales_CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Fact Sales Data File.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Inbound_Data",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area/AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FactInternetSales.csv",
						"folderPath": "All Files",
						"container": "inbounddatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "NULL",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "OrderDateKey",
						"type": "String"
					},
					{
						"name": "DueDateKey",
						"type": "String"
					},
					{
						"name": "ShipDateKey",
						"type": "String"
					},
					{
						"name": "CustomerKey",
						"type": "String"
					},
					{
						"name": "PromotionKey",
						"type": "String"
					},
					{
						"name": "CurrencyKey",
						"type": "String"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "String"
					},
					{
						"name": "SalesOrderNumber",
						"type": "String"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "String"
					},
					{
						"name": "RevisionNumber",
						"type": "String"
					},
					{
						"name": "OrderQuantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "ExtendedAmount",
						"type": "String"
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "String"
					},
					{
						"name": "DiscountAmount",
						"type": "String"
					},
					{
						"name": "ProductStandardCost",
						"type": "String"
					},
					{
						"name": "TotalProductCost",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					},
					{
						"name": "Freight",
						"type": "String"
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "String"
					},
					{
						"name": "CustomerPONumber",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "DueDate",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Inbound_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_TextDataFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "All text files in test area in FTP server.",
				"linkedServiceName": {
					"referenceName": "AxiomCore_VM_Seagate_SFtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Axiom Datasets/Test Area"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "test_area"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AxiomCore_VM_Seagate_SFtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AxiomCore_VM_Seagate_SFtpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Link to Secured FTP server where data files from customers will be stored temporarily. ",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('AxiomCore_VM_Seagate_SFtpServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AxiomCore_VM_Seagate_SFtpServer_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_Inbound_Data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_Inbound_Data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_AdventureWorksDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL Database link to AdventureWorks db for Data Warehouse.",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_AdventureWorksDW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFT_LoadDataIntoDB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load file data into the DB.",
				"folder": {
					"name": "Test Area/AdventureWorks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_DimProduct_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimProductData"
						},
						{
							"dataset": {
								"referenceName": "Source_DimCustomer_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimCustomerData"
						},
						{
							"dataset": {
								"referenceName": "Source_FactInternetSales_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCFactInternetSalesData"
						},
						{
							"dataset": {
								"referenceName": "Source_DimSalesTerritory_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimSalesTerritoryData"
						},
						{
							"dataset": {
								"referenceName": "Source_DimProductCategory_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimProductCategoryData"
						},
						{
							"dataset": {
								"referenceName": "Source_DimDate_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimDateData"
						},
						{
							"dataset": {
								"referenceName": "Source_DimProductSubCategory_CSVFile",
								"type": "DatasetReference"
							},
							"name": "SRCDimProductSubCategoryData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimProduct",
								"type": "DatasetReference"
							},
							"name": "SNKDimProductData"
						},
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimCustomer",
								"type": "DatasetReference"
							},
							"name": "SNKDimCustomerData"
						},
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_FactInternetSales",
								"type": "DatasetReference"
							},
							"name": "SNKFactInternetSalesData"
						},
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimSalesTerritoy",
								"type": "DatasetReference"
							},
							"name": "SNKDimSalesTerritoryData"
						},
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimProductCategory",
								"type": "DatasetReference"
							},
							"name": "SNKDimProductCategoryData"
						},
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimDate",
								"type": "DatasetReference"
							},
							"name": "SNKDimDateData"
						},
						{
							"dataset": {
								"referenceName": "Destination_AzureSqlTable_DimProductSubCategory",
								"type": "DatasetReference"
							},
							"name": "SNKDimProductSubCategoryData"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tProductKey as short,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as short,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as double,\n\t\tFinishedGoodsFlag as boolean,\n\t\tColor as string,\n\t\tSafetyStockLevel as short,\n\t\tReorderPoint as short,\n\t\tListPrice as double,\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as double,\n\t\tDaysToManufacture as short,\n\t\tProductLine as string,\n\t\tDealerPrice as double,\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as string,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as string,\n\t\tEndDate as string,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimProductData\nsource(output(\n\t\tCustomerKey as short,\n\t\tGeographyKey as short,\n\t\tCustomerAlternateKey as string,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tNameStyle as boolean,\n\t\tBirthDate as date,\n\t\tMaritalStatus as string,\n\t\tSuffix as string,\n\t\tGender as string,\n\t\tEmailAddress as string,\n\t\tYearlyIncome as double,\n\t\tTotalChildren as short '000',\n\t\tNumberChildrenAtHome as short '000',\n\t\tEnglishEducation as string,\n\t\tSpanishEducation as string,\n\t\tFrenchEducation as string,\n\t\tEnglishOccupation as string,\n\t\tSpanishOccupation as string,\n\t\tFrenchOccupation as string,\n\t\tHouseOwnerFlag as string,\n\t\tNumberCarsOwned as short '000',\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tPhone as string,\n\t\tDateFirstPurchase as date,\n\t\tCommuteDistance as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimCustomerData\nsource(output(\n\t\tProductKey as short,\n\t\tOrderDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tShipDateKey as integer,\n\t\tCustomerKey as integer,\n\t\tPromotionKey as integer,\n\t\tCurrencyKey as short,\n\t\tSalesTerritoryKey as short,\n\t\tSalesOrderNumber as string,\n\t\tSalesOrderLineNumber as short,\n\t\tRevisionNumber as short,\n\t\tOrderQuantity as integer,\n\t\tUnitPrice as double,\n\t\tExtendedAmount as double,\n\t\tUnitPriceDiscountPct as float,\n\t\tDiscountAmount as float,\n\t\tProductStandardCost as double,\n\t\tTotalProductCost as double,\n\t\tSalesAmount as double,\n\t\tTaxAmt as double,\n\t\tFreight as double,\n\t\tCarrierTrackingNumber as string,\n\t\tCustomerPONumber as string,\n\t\tOrderDate as date 'yyyy-MM-dd',\n\t\tDueDate as date 'yyyy-MM-dd',\n\t\tShipDate as date 'yyyy-MM-dd'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCFactInternetSalesData\nsource(output(\n\t\tSalesTerritoryKey as integer,\n\t\tSalesTerritoryAlternateKey as integer,\n\t\tSalesTerritoryRegion as string,\n\t\tSalesTerritoryCountry as string,\n\t\tSalesTerritoryGroup as string,\n\t\tSalesTerritoryImage as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimSalesTerritoryData\nsource(output(\n\t\tProductCategoryKey as integer,\n\t\tProductCategoryAlternateKey as integer,\n\t\tEnglishProductCategoryName as string,\n\t\tSpanishProductCategoryName as string,\n\t\tFrenchProductCategoryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimProductCategoryData\nsource(output(\n\t\tDateKey as integer,\n\t\tFullDateAlternateKey as date,\n\t\tDayNumberOfWeek as short,\n\t\tEnglishDayNameOfWeek as string,\n\t\tSpanishDayNameOfWeek as string,\n\t\tFrenchDayNameOfWeek as string,\n\t\tDayNumberOfMonth as short,\n\t\tDayNumberOfYear as short,\n\t\tWeekNumberOfYear as short,\n\t\tEnglishMonthName as string,\n\t\tSpanishMonthName as string,\n\t\tFrenchMonthName as string,\n\t\tMonthNumberOfYear as short,\n\t\tCalendarQuarter as short,\n\t\tCalendarYear as short,\n\t\tCalendarSemester as short,\n\t\tFiscalQuarter as short,\n\t\tFiscalYear as short,\n\t\tFiscalSemester as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimDateData\nsource(output(\n\t\tProductSubcategoryKey as integer,\n\t\tProductSubcategoryAlternateKey as integer,\n\t\tEnglishProductSubcategoryName as string,\n\t\tSpanishProductSubcategoryName as string,\n\t\tFrenchProductSubcategoryName as string,\n\t\tProductCategoryKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRCDimProductSubCategoryData\nSRCDimProductData sink(input(\n\t\tProductKey as integer,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as integer,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as decimal(19,4),\n\t\tFinishedGoodsFlag as boolean,\n\t\tColor as string,\n\t\tSafetyStockLevel as short,\n\t\tReorderPoint as short,\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as double,\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tDealerPrice as decimal(19,4),\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as binary,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductAlternateKey,\n\t\tWeightUnitMeasureCode,\n\t\tSizeUnitMeasureCode,\n\t\tEnglishProductName,\n\t\tSpanishProductName,\n\t\tFrenchProductName,\n\t\tFinishedGoodsFlag,\n\t\tColor,\n\t\tSize,\n\t\tSizeRange,\n\t\tProductLine,\n\t\tClass,\n\t\tStyle,\n\t\tModelName,\n\t\tEnglishDescription,\n\t\tFrenchDescription,\n\t\tChineseDescription,\n\t\tArabicDescription,\n\t\tHebrewDescription,\n\t\tThaiDescription,\n\t\tGermanDescription,\n\t\tJapaneseDescription,\n\t\tTurkishDescription,\n\t\tStatus,\n\t\tProductKey,\n\t\tStartDate,\n\t\tEndDate,\n\t\tLargePhoto,\n\t\tDealerPrice,\n\t\tDaysToManufacture,\n\t\tWeight,\n\t\tListPrice,\n\t\tReorderPoint,\n\t\tSafetyStockLevel,\n\t\tStandardCost,\n\t\tProductSubcategoryKey\n\t),\n\tskipDuplicateMapInputs: true) ~> SNKDimProductData\nSRCDimCustomerData sink(input(\n\t\tCustomerKey as integer,\n\t\tGeographyKey as integer,\n\t\tCustomerAlternateKey as string,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tNameStyle as boolean,\n\t\tBirthDate as date,\n\t\tMaritalStatus as string,\n\t\tSuffix as string,\n\t\tGender as string,\n\t\tEmailAddress as string,\n\t\tYearlyIncome as decimal(19,4),\n\t\tTotalChildren as byte,\n\t\tNumberChildrenAtHome as byte,\n\t\tEnglishEducation as string,\n\t\tSpanishEducation as string,\n\t\tFrenchEducation as string,\n\t\tEnglishOccupation as string,\n\t\tSpanishOccupation as string,\n\t\tFrenchOccupation as string,\n\t\tHouseOwnerFlag as string,\n\t\tNumberCarsOwned as byte,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tPhone as string,\n\t\tDateFirstPurchase as date,\n\t\tCommuteDistance as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tCustomerKey,\n\t\tGeographyKey,\n\t\tCustomerAlternateKey,\n\t\tTitle,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastName,\n\t\tNameStyle,\n\t\tBirthDate,\n\t\tMaritalStatus,\n\t\tSuffix,\n\t\tGender,\n\t\tEmailAddress,\n\t\tYearlyIncome,\n\t\tTotalChildren,\n\t\tNumberChildrenAtHome,\n\t\tEnglishEducation,\n\t\tSpanishEducation,\n\t\tFrenchEducation,\n\t\tEnglishOccupation,\n\t\tSpanishOccupation,\n\t\tFrenchOccupation,\n\t\tHouseOwnerFlag,\n\t\tNumberCarsOwned,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tPhone,\n\t\tDateFirstPurchase,\n\t\tCommuteDistance\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SNKDimCustomerData\nSRCFactInternetSalesData sink(input(\n\t\tProductKey as integer,\n\t\tOrderDateKey as integer,\n\t\tDueDateKey as integer,\n\t\tShipDateKey as integer,\n\t\tCustomerKey as integer,\n\t\tPromotionKey as integer,\n\t\tCurrencyKey as integer,\n\t\tSalesTerritoryKey as integer,\n\t\tSalesOrderNumber as string,\n\t\tSalesOrderLineNumber as byte,\n\t\tRevisionNumber as byte,\n\t\tOrderQuantity as short,\n\t\tUnitPrice as decimal(19,4),\n\t\tExtendedAmount as decimal(19,4),\n\t\tUnitPriceDiscountPct as double,\n\t\tDiscountAmount as double,\n\t\tProductStandardCost as decimal(19,4),\n\t\tTotalProductCost as decimal(19,4),\n\t\tSalesAmount as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tCarrierTrackingNumber as string,\n\t\tCustomerPONumber as string,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductKey,\n\t\tOrderDateKey,\n\t\tDueDateKey,\n\t\tShipDateKey,\n\t\tCustomerKey,\n\t\tPromotionKey,\n\t\tCurrencyKey,\n\t\tSalesTerritoryKey,\n\t\tSalesOrderNumber,\n\t\tSalesOrderLineNumber,\n\t\tRevisionNumber,\n\t\tOrderQuantity,\n\t\tUnitPrice,\n\t\tExtendedAmount,\n\t\tUnitPriceDiscountPct,\n\t\tDiscountAmount,\n\t\tProductStandardCost,\n\t\tTotalProductCost,\n\t\tSalesAmount,\n\t\tTaxAmt,\n\t\tFreight,\n\t\tCarrierTrackingNumber,\n\t\tCustomerPONumber,\n\t\tOrderDate,\n\t\tDueDate,\n\t\tShipDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SNKFactInternetSalesData\nSRCDimSalesTerritoryData sink(input(\n\t\tSalesTerritoryKey as integer,\n\t\tSalesTerritoryAlternateKey as integer,\n\t\tSalesTerritoryRegion as string,\n\t\tSalesTerritoryCountry as string,\n\t\tSalesTerritoryGroup as string,\n\t\tSalesTerritoryImage as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tSalesTerritoryKey,\n\t\tSalesTerritoryAlternateKey,\n\t\tSalesTerritoryRegion,\n\t\tSalesTerritoryCountry,\n\t\tSalesTerritoryGroup,\n\t\tSalesTerritoryImage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SNKDimSalesTerritoryData\nSRCDimProductCategoryData sink(input(\n\t\tProductCategoryKey as integer,\n\t\tProductCategoryAlternateKey as integer,\n\t\tEnglishProductCategoryName as string,\n\t\tSpanishProductCategoryName as string,\n\t\tFrenchProductCategoryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SNKDimProductCategoryData\nSRCDimDateData sink(input(\n\t\tDateKey as integer,\n\t\tFullDateAlternateKey as date,\n\t\tDayNumberOfWeek as byte,\n\t\tEnglishDayNameOfWeek as string,\n\t\tSpanishDayNameOfWeek as string,\n\t\tFrenchDayNameOfWeek as string,\n\t\tDayNumberOfMonth as byte,\n\t\tDayNumberOfYear as short,\n\t\tWeekNumberOfYear as byte,\n\t\tEnglishMonthName as string,\n\t\tSpanishMonthName as string,\n\t\tFrenchMonthName as string,\n\t\tMonthNumberOfYear as byte,\n\t\tCalendarQuarter as byte,\n\t\tCalendarYear as short,\n\t\tCalendarSemester as byte,\n\t\tFiscalQuarter as byte,\n\t\tFiscalYear as short,\n\t\tFiscalSemester as byte\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SNKDimDateData\nSRCDimProductSubCategoryData sink(input(\n\t\tProductSubcategoryKey as integer,\n\t\tProductSubcategoryAlternateKey as integer,\n\t\tEnglishProductSubcategoryName as string,\n\t\tSpanishProductSubcategoryName as string,\n\t\tFrenchProductSubcategoryName as string,\n\t\tProductCategoryKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SNKDimProductSubCategoryData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_DimProduct_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Source_DimCustomer_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Source_FactInternetSales_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Source_DimSalesTerritory_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Source_DimProductCategory_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Source_DimDate_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Source_DimProductSubCategory_CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimProduct')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimCustomer')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_FactInternetSales')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimSalesTerritoy')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimProductCategory')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimDate')]",
				"[concat(variables('factoryId'), '/datasets/Destination_AzureSqlTable_DimProductSubCategory')]"
			]
		}
	]
}