{
	"name": "Stage Manifests Data",
	"properties": {
		"activities": [
			{
				"name": "Get Manifest List",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT\n    con.base_name       AS ManifestFile,\n    con.collection_id   AS CollectionIDForManifest\nFROM \n    process.unit_detail AS unit \nINNER JOIN\n    arrival.collection AS col \n    ON unit.collection_id = col.id\nINNER JOIN\n    arrival.container AS con \n    ON col.id = con.collection_id\nWHERE\n    unit.unit_id = @{pipeline().parameters.ProcessUnitID}\n    AND con.base_name LIKE '%.manifest'\n    AND col.active = 1\n    AND con.active = 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SrcAzureSqlDataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Iterate Manifest List",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Manifest List",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Manifest List').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Switch1",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "string(@pipeline().parameters.ProcessUnitID)",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "1",
										"activities": [
											{
												"name": "Load Manifest Data_copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "SqlServerSink",
														"sqlWriterStoredProcedureName": "[dbo].[stage_manifest_item]",
														"storedProcedureParameters": {
															"container_count": {
																"type": "Int64"
															},
															"container_name": {
																"type": "String"
															},
															"unit_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.ProcessUnitID",
																	"type": "Expression"
																}
															}
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"type": "Double",
																	"ordinal": 1
																},
																"sink": {
																	"name": "cxcx"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SrcManifestFiles",
														"type": "DatasetReference",
														"parameters": {
															"BlobContainer": {
																"value": "@pipeline().parameters.BlobContainer",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Directory",
																"type": "Expression"
															},
															"ManifestFile": {
																"value": "@item().ManifestName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DstSqlServerTable",
														"type": "DatasetReference"
													}
												]
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ProcessUnitID": {
				"type": "int",
				"defaultValue": 1
			},
			"BlobContainer": {
				"type": "string"
			},
			"Directory": {
				"type": "string"
			},
			"ProcessUnitCode": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Axiom Pipelines/Production"
		},
		"annotations": []
	}
}